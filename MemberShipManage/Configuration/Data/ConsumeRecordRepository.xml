<?xml version="1.0" encoding="utf-8" ?>
<Scripts>
  <Script Key="CreateCustomeConsume">
    <![CDATA[
DECLARE @TempAmount DECIMAL(18,2)
DECLARE @ParentLevel INT
DECLARE @ParentCustomerID INT
DECLARE @Level INT = 2
DECLARE @ParentLevel INT
DECLARE @ParentCustomerID INT
DECLARE @Status INT
DECLARE @Index INT = 1
DECLARE @TotalCount INT = 0

DECLARE @ParentCustomerTable TABLE
(
	ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ParentLevel INT NOT NULL,
	ParentCustomerID INT NOT NULL,
	Status BIT NULL
)

SET @Amount = ROUND(@Amount * @DiscountRatio,0)
SELECT TOP(1)
	@TempAmount = ISNULL(Amount,0.0)
FROM MembershipManage.dbo.CustomerAmount A WITH(NOLOCK)
INNER JOIN MembershipManage.dbo.Customer B WITH(NOLOCK)
	ON A.CustomerID = B.ID
WHERE A.CustomerID = @CustomerID

IF @TempAmount < @Amount
BEGIN
	SET @ErrorMessage = '余额不足，请充值'
	RETURN
END

UPDATE TOP(1) MembershipManage.dbo.CustomerAmount
SET Amount = Amount - @Amount,
	LastEditUser = @UserID,
	LastEditDate = GETDATE()
WHERE CustomerID = @CustomerID

INSERT INTO MembershipManage.dbo.ConsumeRecord
(
	CustomerID,
	Amount,
	Detail,
	InDate,
	InUser
)
VALUES
(
	@CustomerID,
	@Amount,
	@Detail,
	GETDATE(),
	@UserID
)

;WITH cte_parent(ID,Name,ParentID,Level)
AS
(
    SELECT ID,Name,ParentID,0 AS Level
    FROM MembershipManage.dbo.Customer WITH(NOLOCK)
    WHERE ID IN
    (
        SELECT ID 
        FROM MembershipManage.dbo.Customer 
        WHERE ID = @CustomerID
    )
    UNION ALL
    SELECT b.ID,b.Name,b.ParentID,a.Level + 1 AS Level
    FROM MembershipManage.dbo.Customer b
    INNER JOIN cte_parent a
		ON a.ParentID = b.ID
)

INSERT INTO @ParentCustomerTable
(
	ParentLevel,
	ParentCustomerID,
	Status
)
SELECT TOP(2)
    Level,
    ParentID,
	c.Status
FROM cte_parent cte
INNER JOIN dbo.Customer c
	ON c.ID = cte.ParentID
WHERE Level <= @Level AND Level > 0

SET @TotalCount = @@ROWCOUNT

WHILE @Index <= @TotalCount
BEGIN
	SELECT TOP(1)
		@ParentLevel = ParentLevel,
		@ParentCustomerID = ParentCustomerID,
		@Status = Status
	FROM @ParentCustomerTable
	WHERE ID = @Index

	IF @Status = 1
	BEGIN
		UPDATE TOP(1) MembershipManage.dbo.CustomerAmount
		SET Amount = Amount + ROUND(@Amount * (@KickbackRatio / POWER(2,@ParentLevel - 1)),0),
			LastEditUser = @UserID,
			LastEditDate = GETDATE()
		WHERE CustomerID = @ParentCustomerID
	END
  
	SET @Index = @Index + 1
END
    ]]>
  </Script>
</Scripts>